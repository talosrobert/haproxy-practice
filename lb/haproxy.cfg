global
  default-path config

  # refuse to start if any warning is emitted at boot (keep configs clean)
  zero-warning
  stats socket ipv4@*:8181 level admin
  user haproxy
  group haproxy

  # daemonize
  daemon

  # do not keep old processes longer than that after a reload
  hard-stop-after 5m

  stats timeout 1h

  # send logs to stderr for logging via the service manager
  log stderr local0 info

  # intermediate security for SSL, from https://ssl-config.mozilla.org/
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

# default settings common to all HTTP proxies below
defaults http
  mode http
  log-format "${HTTPLOG_JSON}"
  log global
  timeout client 1m
  timeout server 1m
  timeout connect 10s
  timeout http-keep-alive 2m
  timeout queue 15s
  timeout tunnel 4h  # for websocket

userlist stats-users
  group admin users admin
  user admin password $5$MJXkE7lM1NbIULc2$Hzmhgih.Gdj2Ro0DxRMMvBJU61R.ZTrG0DrwSLbSpI1

listen internal_stats
  bind :8282

  stats enable
  stats refresh 10s
  stats uri /
  stats show-modules
  stats show-legends # show server IP in stats page
  http-request use-service prometheus-exporter if { path /metrics }
  acl AUTH http_auth(stats-users)
  acl AUTH_ADMIN http_auth_group(stats-users) admin
  stats http-request auth unless AUTH
  stats admin if AUTH_ADMIN

frontend fe_main
  bind :8383 name clear
  option socket-stats  # provide per-bind line stats

  # tpc level rate-limiting
  tcp-request connection reject if { src_conn_rate(st_src_appl_tcp) gt 500 }
  tcp-request connection track-sc0 src,ipmask(32) table st_src_appl_tcp
  tcp-request connection reject if { sc_get_gpt0(0) eq 1 }

  # set HSTS for one year after all responses
  http-after-response set-header Strict-Transport-Security "max-age=31536000"
  # http-request redirect scheme https code 301 if !{ ssl_fc }

  # silently ignore connect probes and pre-connect without request
  option http-ignore-probes

  # pass client's IP address to the server and prevent against attempts
  # to inject bad contents
  http-request del-header x-forwarded-for
  option forwardfor

  # enable HTTP compression of text contents
  compression algo deflate gzip
  compression type text/ application/javascript application/xhtml+xml image/x-icon

  # enable HTTP caching of any cacheable content
  http-request  cache-use cache
  http-response cache-store cache

  default_backend be_appl

# The cache instance used by the frontend (200MB, 10MB max object, 1 hour max)
# May be consulted using "show cache" on the CLI socket
cache cache
  total-max-size 200        # RAM cache size in megabytes
  max-object-size 10485760  # max cacheable object size in bytes
  max-age 3600              # max cache duration in seconds
  process-vary on           # handle the Vary header (otherwise don't cache)

# First application
backend be_appl
  # Algorithm:
  #  - roundrobin is usually better for short requests,
  #  - leastconn is better for mixed slow ones, and long transfers,
  #  - random is generally good when using multiple load balancers
  balance random

  # abort if the client clicks on stop.
  option abortonclose

  # insert a session cookie for user stickiness
  cookie appl insert indirect nocache

  # check the servers' health using HTTP requests
  option httpchk
  http-check send meth GET uri / ver HTTP/1.1 hdr host nginx.web.dev

  server web1 web1:80 cookie s1 maxconn 100 check inter 1s

backend st_src_appl_tcp_v6
  stick-table type ipv6 size 1m expire 1h store conn_cnt,conn_cur,conn_rate(1m),bytes_out_cnt,bytes_out_rate(30m),gpt0
